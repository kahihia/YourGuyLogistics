/*! Vendor-Webaap - v0.0.0 - 2016-02-18 */
!function(){"use strict";var a=function(a,b,c,d){this.loader=!1,this.userLogin=function(){this.loader=!0;var e=this,f={username:this.username,password:this.password};b.login(f).then(function(b){c.token=b.data.auth_token,d.$refresh().then(function(b){b.$updateuserRole(),a.go("home")})},function(a){e.loader=!1,e.error_message=a.data.non_field_errors[0]})}};angular.module("login",[]).config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"/static/modules/login/login.html",controllerAs:"login",controller:"LoginCntrl",resolve:{vendorClients:"vendorClients",access:["Access",function(a){return a.isAnonymous()}]}})}]).controller("LoginCntrl",["$state","AuthService","$localStorage","vendorClients",a])}(),function(){"use strice";var a=function(a,b){return{login:function(c){return a.post(b.v1baseUrl+"auth/login/",c)}}};angular.module("login").factory("AuthService",["$http","constants",a])}(),function(){"use strict";var a=function(a,b,c,d,e){
// Redirect to admin or vendor page accorfing to the credentials.
e.$hasRole(d.userRole.ADMIN)?this.admin=!0:e.$hasRole(d.userRole.VENDOR)&&(this.vendor=!0);
// Controller logic for common items between vendor and admin.
var f=this;this.store_name=e.store_name;var g=c.confirm().parent(angular.element(document.querySelector("#body"))).clickOutsideToClose(!1).title("Are you sure you want to Sign Out?").textContent("After this you will be redirected to login page.").ariaLabel("Sign Out").targetEvent().ok("Sign Out!").cancel("Not Now").openFrom("#logout-button").closeTo("#logout-button");this.toggleSideNav=function(){b("left").toggle()},this.logout=function(){e.$clearUserRole(),e.$refresh().then(function(b){a.go("login")})},this.showLogoutDialog=function(){c.show(g).then(function(){f.logout()})}};angular.module("home",[]).config(["$stateProvider",function(a){a.state("home",{url:"/home",templateUrl:"/static/modules/home/home.html",controllerAs:"home",controller:"homeCntrl",resolve:{vendorClients:"vendorClients",access:["Access",function(a){return a.isAuthenticated()}]}})}]).controller("homeCntrl",["$state","$mdSidenav","$mdDialog","constants","vendorClients",a])}(),function(){"use strict";var a=function(a,b,c){};angular.module("forbidden",[]).config(["$stateProvider",function(a){a.state("forbidden",{url:"/forbidden",templateUrl:"/static/modules/forbidden/forbidden.html",controllerAs:"forbidden",controller:"forbiddenCntrl"})}]).controller("forbiddenCntrl",["$state",a])}(),function(){"use strict";
// Declare all the app level modules which depend on the different filters and services
angular.module("ygVendorApp",["ngMaterial","ngMessages","ui.router","ngStorage","ngResource","base64","login","home","order","deliveryguy","forbidden"]).config(["$urlRouterProvider","$locationProvider","$resourceProvider","$mdThemingProvider","roleProvider",function(a,b,c,d,e){
// For any unmatched url, redirect to /home
a.otherwise("/home"),b.html5Mode(!0).hashPrefix("!"),c.defaults.stripTrailingSlashes=!1,e.$get().$setUserRole(),d.definePalette("ygBlue",{50:"EEFDFD",100:"E9F5F5",200:"C8EEF8",300:"89DAF1",400:"6DD2ED",500:"52C9EA",600:"37C0E7",700:"1CB8E3",800:"18A2CB",900:"158CAD",A100:"C4EEF9",A200:"78D7EF",A400:"1FC0E7",A700:"31AEF7",contrastDefaultColor:"light",// whether, by default, text (contrast)
// on this palette should be dark or light
contrastDarkColors:["50","100",//hues which contrast should be 'dark' by default
"200","300","400","A100"],contrastLightColors:void 0}),d.definePalette("ygOrange",{50:"FFF9F1",100:"FF7CEC",200:"FFEED6",300:"FDD9A6",400:"FDCD88",500:"FCC06A",600:"FBB34C",700:"FBA72E",800:"FA9A10",900:"E78A05",A100:"FFF6CF",A200:"FFF0C7",A400:"FDD393",A700:"FBB134",contrastDefaultColor:"dark",// whether, by default, text (contrast)
// on this palette should be dark or light
contrastDarkColors:["50","100",//hues which contrast should be 'dark' by default
"200","300","400","A100"],contrastLightColors:void 0}),d.theme("ygBlueTheme").primaryPalette("ygBlue",{"default":"700"}).accentPalette("ygOrange",{"default":"500"}).warnPalette("red"),d.setDefaultTheme("ygBlueTheme")}])}(),function(){"use strice";var a={role:"",token:""};angular.module("ygVendorApp").constant("UserData",a)}(),function(){"use strict";var a=[{status:"Intransit",value:"INTRANSIT"},{status:"Queued",value:"QUEUED",selected:!1},{status:"Delivered",value:"DELIVERED",selected:!1},{status:"Order Placed",value:"ORDER_PLACED",selected:!1},{status:"Pickup Attempted",value:"PICKUPATTEMPTED",selected:!1},{status:"Deliver Attempted",value:"DELIVERYATTEMPTED",selected:!1},{status:"Cancelled",value:"CANCELLED",selected:!1},{status:"Rejected",value:"REJECTED",selected:!1}],b=[{status:"All",value:"ALL"},{status:"Checked-In",value:"ONLY_CHECKEDIN"},{status:"Not Checked-In",value:"NOT_CHECKEDIN"},{status:"CheckedIn & CheckedOut",value:"CHECKEDIN_AND_CHECKEDOUT"}],c=[{value:"00 AM - 06 AM ",time:{start_time:1,end_time:6}},{value:"06 AM - 12 PM",time:{start_time:6,end_time:12}},{value:"12 PM - 06 PM",time:{start_time:12,end_time:18}},{value:"06 PM - 12 AM",time:{start_time:18,end_time:23}}],d={v1baseUrl:"https://yourguytestserver.herokuapp.com/api/v1/",v2baseUrl:"https://yourguytestserver.herokuapp.com/api/v2/",v3baseUrl:"https://yourguytestserver.herokuapp.com/api/v3/",userRole:{ADMIN:"operations",VENDOR:"vendor"},status:a,time:c,dg_status:b};angular.module("ygVendorApp").constant("constants",d)}(),function(){"use strict";var a=function(a,b){var c={OK:200,UNAUTHORIZED:401,FORBIDDEN:403,hasRole:function(d){var e=a.defer();return b.then(function(a){a.$hasRole(d)?e.resolve(c.OK):a.$isAnonymous()?e.reject(c.UNAUTHORIZED):e.reject(c.FORBIDDEN)}),e.promise},isAuthenticated:function(){var d=a.defer();return b.then(function(a){a.$isAuthenticated()?d.resolve(c.Ok):d.reject(c.UNAUTHORIZED)}),d.promise},isAnonymous:function(){var d=a.defer();return b.then(function(a){a.$isAnonymous()?d.resolve(c.OK):d.reject(c.FORBIDDEN)}),d.promise}};return c};angular.module("ygVendorApp").factory("Access",["$q","vendorClients",a])}(),function(){"use strict";var a=function(a,b){return{dgListQuery:a(b.v1baseUrl+"deliveryguy/:id",{id:"@id"},{query:{method:"GET",isArray:!0}}),dgPageQuery:a(b.v3baseUrl+"deliveryguy/:id/",{id:"@id"},{query:{method:"GET",isArray:!1}})}};angular.module("ygVendorApp").factory("DeliveryGuy",["$resource","constants",a])}(),function(){"use strict";var a=function(a,b){return{getOrders:a(b.v2baseUrl+"order/:id/",{id:"@id"},{query:{method:"GET",isArray:!1}})}};angular.module("ygVendorApp").factory("Order",["$resource","constants",a])}(),function(){"use strict";var a=function(a,b){return a(b.v1baseUrl+"vendor/:id",{id:"@id"},{profile:{method:"GET"},query:{method:"GET",isArray:!1,transformResponse:function(a){var b=angular.fromJson(a);if(angular.isArray(b)){var c={};return c.store_name="Operations",c.vendors=b,c}return b}}})};angular.module("ygVendorApp").factory("Vendor",["$resource","constants",a])}(),
// (function(){
// 	'use strict';
// 	var DgList = function ($q,DeliverGuy){
// 		var deliveryguy = {};
// 		var fetchdg = function() {
// 			var deferred = $q.defer();
// 			DeliverGuy.dgListQuery.query(function (response) {
// 				deferred.resolve(angular.extend(deliveryguy, {
// 					dgs : response,
// 					$refresh: fetchdg,
// 				}));
// 			}, function (error){
// 				deferred.reject(angular.extend(deliveryguy , error ,{
// 					$refresh : fetchdg,
// 				}));
// 			});
// 			return deferred.promise;
// 		};
// 		return fetchdg();
// 	};
// 	angular.module('ygVendorApp')
// 	.factory('DgList', [
// 		'$q',
// 		'DeliverGuy', 
// 		DgList
// 	]);
// })();
function(){"use strict";var a=function(a,b,c){var d={responseError:function(d){var e=a.defer();return(401===d.status||403===d.status)&&(b.$reset(),c.path("/login")),e.reject(d),e.promise}};return d},b=function(a,b,c,d){a.$on("$stateChangeError",function(a,e,f,g,h,i){angular.element(d[0].getElementsByClassName("request-loader")).addClass("request-loader-hidden"),i==b.UNAUTHORIZED?c.go("login"):i==b.FORBIDDEN&&c.go("forbidden")}),a.$on("$stateChangeStart",function(a,b,c,e,f){angular.element(d[0].getElementsByClassName("request-loader")).removeClass("request-loader-hidden")}),a.$on("$stateChangeSuccess",function(b,c,e,f,g){a.previousState={state:f.name,params:g},console.log(a.previousState),angular.element(d[0].getElementsByClassName("request-loader")).addClass("request-loader-hidden")})};angular.module("ygVendorApp").factory("errorHandler",["$q","$localStorage","$location",a]).config(["$httpProvider",function(a){a.interceptors.push("errorHandler")}]).run(["$rootScope","Access","$state","$document",b])}(),function(){"use strict";var a=function(a){var b={request:function(b){return b.headers=b.headers||{},a.token&&(b.headers.Authorization="Token "+a.token),b}};return b};angular.module("ygVendorApp").factory("tokenInjector",["$localStorage",a]).config(["$httpProvider",function(a){a.interceptors.push("tokenInjector")}])}(),function(){"use strice";var a=function(a,b){var c={userrole:"anonymous",authenticated:!1,$resetUserRole:function(){return b.$reset(),userrole="anonymous",authenticated=!1,{userrole:userrole,is_authenticated:authenticated}},$setUserRole:function(){if(b.token){var c=a.decode(b.token).split(":");userrole=c[1],authenticated=!0}else userrole="anonymous",authenticated=!1},$getUserRole:function(){return{userrole:userrole,is_authenticated:authenticated}}};return c};angular.module("ygVendorApp").factory("role",["$base64","$localStorage",a])}(),function(){"use strict";var a=function(a,b,c){var d={},e=function(){var f=a.defer();return c.query(function(a){f.resolve(angular.extend(d,a,{$refresh:e,$updateuserRole:function(){return b.$setUserRole()},$clearUserRole:function(){return b.$resetUserRole()},$hasRole:function(a){return b.$getUserRole().userrole==a},$isAuthenticated:function(){return b.$getUserRole().is_authenticated},$isAnonymous:function(){return!b.$getUserRole().is_authenticated}}))},function(a){f.resolve(angular.extend(d,{$refresh:e,$updateuserRole:function(){return b.$setUserRole()},$clearUserRole:function(){return b.$resetUserRole()},$hasRole:function(a){return $getUserRole().userrole==a},$isAuthenticated:function(){return b.$getUserRole().is_authenticated},$isAnonymous:function(){return!b.$getUserRole().is_authenticated}}))}),f.promise};return e()};angular.module("ygVendorApp").factory("vendorClients",["$q","role","Vendor",a])}(),function(){"use strict";angular.module("ygVendorApp").directive("ydPagination",[function(){
// Runs during compile
return{
// name: '',
// priority: 1,
// terminal: true,
// template: '',
// templateUrl: '',
// replace: true,
// transclude: true,
// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),
// controller: function($scope, $element, $attrs, $transclude) {},
// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements
/*
				scope {
					@total      : total data count to show as total data.
					@totalPage  : total number of pages the present.
					@params     : all the params that needs to be sent, like page, date etc. it should be a object with madatory page property.
					@listLength : total count of current data list.
					@paginate   : object which contains two function to paginate to next and previous page.
					@pending    : optional! number of pending data which aren't executed yet.
					@unassigned : optional! number of unassigned data which aren't assagined yet.
					@getData    : a function of parent controller to reload the data as params changes. 
				}
			*/
scope:{total:"@",totalPage:"@",params:"=",listLength:"@",paginate:"=",pending:"@?",unassigned:"@?",getData:"&"},// {} = isolate, true = child, false/undefined = no change
restrict:"AE",// E = Element, A = Attribute, C = Class, M = Comment
link:function(a,b,c,d){a.orderFrom=50*(a.params.page-1)+1,a.orderTo=a.orderFrom-1+parseInt(a.listLength),a.pageRange=function(){return new Array(parseInt(a.totalPage))}},template:['<div class="ydPagination" layout="row" layout-align="start center">','<div class="stats" layout="row">','<p ng-if="pending">Pending: {{pending}} </p>','<p ng-if="unassigned">Unassigned: {{unassigned}} </p>',"<p>Total: {{total}} </p>","</div>","<span flex></span>",'<div class="pagination" layout="row" layout-align="start center">',"<p>Page:</p>",'<md-input-container class="md-accent">',
// '<label class="hide-gt-xs">Page</label>',
'<md-select class="md-warn" ng-model="params.page" ng-change="getData()" aria-label="page select">','<md-option class="md-accent" ng-repeat="page in pageRange() track by $index" value="{{$index + 1}}">{{$index + 1}}</md-option>',"</md-select>","</md-input-container>","</div>",'<div class="pagination hide-xs" layout="row" layout-align="start center">',"<p>{{orderFrom}} -- {{orderTo}} of {{total}}</p>","</div>",'<div class="page-navigation">','<md-button ng-disabled="params.page == 1" ng-click="paginate.previouspage();" class="md-icon-button md-primary" aria-label="Menu Icon">',"<md-icon>arrow_backward</md-icon>","</md-button>",'<md-button ng-disabled="params.page == totalPage" ng-click="paginate.nextpage();" class="md-icon-button md-primary" aria-label="Menu Icon">',"<md-icon>arrow_forward</md-icon>","</md-button>","</div>","</div>"].join("")}}])}(),function(){"use strict";var a=function(a,b,c,d,e,f,g,h){/*
			 Variable definations
		*/
var i=this;this.params=c,this.statusArray=void 0===c.dg?[]:c.dg.split(","),this.params.date=new Date(this.params.date),this.vendor_list=d.vendors,/*
			 scope Orders variable assignments are done from this section for the controller
		*/
this.orders=f.data,this.orderFrom=50*(this.params.page-1)+1,this.orderTo=this.orderFrom-1+f.data.length,this.total_pages=f.total_pages,this.total_orders=f.total_orders,this.pending_orders_count=f.pending_orders_count,this.unassigned_orders_count=f.unassigned_orders_count,/*
			@ status_list: scope order status for eg: 'INTRANSIT' ,'DELIVERED' variable assignments.
			@ time_list: scope order time for time filer variable assignments.
		*/
this.status_list=g.status,this.time_list=g.time,/*
			@ All method defination for the controller starts from here on.
		*/
/*
			 @ toggleFilter : main sidenav toggle function, this function toggle the sidebar of the filets of the orders page page.
		*/
this.toggleFilter=function(){b("order-filter").toggle()},/*
			@pagerange: funxtion for total pages generations for pagination
		*/
this.pageRange=function(a){return new Array(a)},/*
			@paginate is a function to paginate to the next and previous page of the order list
			@statusSelection is a fucntion to select or unselect the status data in order filter
		*/
this.paginate={nextpage:function(){i.params.page=i.params.page+1,i.getOrders()},previouspage:function(){i.params.page=i.params.page-1,i.getOrders()}},this.statusSelection={toggle:function(a,b){var c=b.indexOf(a.value);c>-1?b.splice(c,1):b.push(a.value)},exists:function(a,b){return b.indexOf(a.value)>-1}},/*
			@dgSearchTextChange is a function for Delivery guy search for filter. When ever the filtered dg change, 
			this function is called.

			@selectedDgChange is a callback function after delivery guy selection in the filter.
		*/
this.dgSearchTextChange=function(a){var b={search:a};return e.dgPageQuery.query(b).$promise.then(function(a){return a.data})},this.selectedDgChange=function(a){a?i.params.dg=a.phone_number:i.params.dg=void 0,i.getOrders()},/*
			@getOrders rleoads the order controller according too the filter to get the new filtered data.
		*/
this.handleOrdeSelection={selectActive:h.isSelected(),numberOfSelectedOrder:h.slectedItemLength(),update:function(){i.handleOrdeSelection.selectActive=h.isSelected(),i.handleOrdeSelection.numberOfSelectedOrder=h.slectedItemLength()},toggle:function(a){h.toggle(a),i.handleOrdeSelection.update()},exists:function(a){return h.exists(a)},clear:function(){h.clearAll(),i.handleOrdeSelection.update()}},/*
			@getOrders rleoads the order controller according too the filter to get the new filtered data.
		*/
this.getOrders=function(){a.transitionTo(a.current,i.params,{reload:!0,inherit:!1,notify:!0})}},b=function(a){console.log("vendor")};angular.module("order",[]).config(["$stateProvider",function(a){a.state("home.opsorder",{url:"^/all-orders?date&vendor&dg&status&page",templateUrl:"/static/modules/order/opsOrders.html",controllerAs:"opsOrder",controller:"opsOrderCntrl",resolve:{vendorClients:"vendorClients",DeliveryGuy:"DeliveryGuy",access:["Access","constants",function(a,b){return a.hasRole(b.userRole.ADMIN)}],orders:["Order","$stateParams",function(a,b){return b.date=void 0!==b.date?new Date(b.date).toISOString():(new Date).toISOString(),b.page=isNaN(b.page)?1:parseInt(b.page),a.getOrders.query(b).$promise}]}}).state("home.order",{url:"^/orders",templateUrl:"/static/modules/order/vendorOrders.html",controllerAs:"order",controller:"vendorOrderCntrl",resolve:{vendorClients:"vendorClients",access:["Access","constants",function(a,b){return a.hasRole(b.userRole.VENDOR)}]}})}]).controller("opsOrderCntrl",["$state","$mdSidenav","$stateParams","vendorClients","DeliveryGuy","orders","constants","orderSelection",a]).controller("vendorOrderCntrl",["$state",b])}(),function(){"use strict";var a=function(){return a};angular.module("order").factory("orderFilter",[a])}(),function(){"use strict";var a=function(){var a={selectedItemArray:[],toggle:function(b){var c=a.selectedItemArray.indexOf(b);c>-1?a.selectedItemArray.splice(c,1):a.selectedItemArray.push(b)},exists:function(b){return a.selectedItemArray.indexOf(b)>-1},addItem:function(b){b.selected=!0,a.selectedItemArray.push(b)},removeItem:function(b){var c=selectedItemArray.indexOf(b);return c>-1?(b.selected=!1,a.selectedItemArray.splice(c,1),!0):!1},isSelected:function(){return a.selectedItemArray.length>0?!0:!1},clearAll:function(){return a.selectedItemArray=[],a.selectedItemArray},slectedItemLength:function(){return a.selectedItemArray.length}};return a};angular.module("order").factory("orderSelection",[a])}(),function(){"use strict";angular.module("deliveryguy",[]).config(["$stateProvider",function(a){a.state("home.dgList",{url:"^/deliveryguy/list?date&attendance&search&page",templateUrl:"/static/modules/deliveryguy/list/list.html",controllerAs:"dgList",controller:"dgListCntrl",resolve:{access:["Access","constants",function(a,b){return a.hasRole(b.userRole.ADMIN)}],dgs:["DeliveryGuy","$stateParams",function(a,b){return b.date=void 0!==b.date?new Date(b.date).toISOString():(new Date).toISOString(),b.attendance=void 0!==b.attendance?b.attendance:"ALL",b.page=isNaN(b.page)?1:parseInt(b.page),a.dgPageQuery.query(b).$promise}]}}).state("home.dgCreate",{url:"^/deliveryguy/create",templateUrl:"/static/modules/deliveryguy/create/create.html",controllerAs:"dgCreate",controller:"dgCreateCntrl",resolve:{access:["Access","constants",function(a,b){return a.hasRole(b.userRole.ADMIN)}]}})}])}(),function(){"use strict";/*
		Constant for storing all the static value required for dgs.
		1. Dg shift timings
		2. Dg transportation mode
	*/
var a={shift_timings:[{start_time:"06:00",end_time:"15:-1"},{start_time:"07:00",end_time:"16:00"},{start_time:"09:00",end_time:"18:00"},{start_time:"10:00",end_time:"19:00"},{start_time:"10:30",end_time:"19:30"},{start_time:"11:00",end_time:"20:00"},{start_time:"13:00",end_time:"22:00"},{start_time:"14:00",end_time:"23:00"}],transportation_mode:[{key:"Biker",value:"BIKER"},{key:"Walker",value:"WALKER"},{key:"Car Driver",value:"CAR_DRIVER"}]};angular.module("deliveryguy").constant("dgConstants",a)}(),function(){"use strict";/*
		filter to convert a time string to specific format for displaying it in dropdown. 
		For eg: 09:00:00 with beconverted to a format to 09:00 AM, 
		which can be shown in dropdowns or any place for ease of user.
	*/
var a=function(a){return function(a){if(a){var b=a.split(":");return moment().hour(b[0]).minute(b[1]).format("hh:mm A")}return!1}};angular.module("deliveryguy").filter("timeAsDate",["$filter",a])}(),function(){"use strict";/*
		dgListCntrl is the controller for the delivery guy lst page. 
		Its resolved after loading all the dgs from the server.
			
	*/
var a=function(a,b,c,d,e){var f=this;this.params=c,this.params.date=new Date(this.params.date),this.dg_status=e.dg_status,this.searchDgActive=void 0!==this.params.search?!0:!1,/*
			@dgs: resolved dgs list accordign to the url prameters.
		*/
this.dgs=d.payload.data.data,this.total_pages=d.payload.data.total_pages,this.total_dgs=d.payload.data.total_dg_count,/*
			 @ toggleFilter : main sidenav toggle function, this function toggle the sidebar of the filets of the dg page page.
		*/
this.toggleFilter=function(){b("dgList-filter").toggle()},/*
			@paginate is a function to paginate to the next and previous page of the delivery guy list
		*/
this.paginate={nextpage:function(){f.params.page=f.params.page+1,f.getDgs()},previouspage:function(){f.params.page=f.params.page-1,f.getDgs()}},/*
			@backFromSearch is a function to revert back from a searched delivery guy name to complete list view of delivery guys
		*/
this.backFromSearch=function(){f.params.search=void 0,f.searchDgActive=!1,f.getDgs()},/*
			@getOrders rleoads the order controller according too the filter to get the new filtered data.
		*/
this.getDgs=function(){a.transitionTo(a.current,f.params,{reload:!0,inherit:!1,notify:!0})}};angular.module("deliveryguy").controller("dgListCntrl",["$state","$mdSidenav","$stateParams","dgs","constants",a])}(),function(){"use strict";var a=function(a,b,c){console.log(c);var d=this;d.shift_timings=c.shift_timings,d.transportation_mode=c.transportation_mode};angular.module("deliveryguy").controller("dgCreateCntrl",["$mdSidenav","$stateParams","dgConstants",a])}();
//# sourceMappingURL=main.min.js.map