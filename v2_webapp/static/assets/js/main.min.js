/*! Vendor-Webaap - v0.0.0 - 2016-01-12 */
!function(){"use strict";var a=function(a,b,c,d){this.loader=!1,this.userLogin=function(){this.loader=!0;var e=this,f={username:this.username,password:this.password};b.login(f).then(function(b){c.token=b.data.auth_token,d.$refresh().then(function(b){b.$updateuserRole(),a.go("home")})},function(a){e.loader=!1,e.error_message=a.data.non_field_errors[0]})}};angular.module("login",[]).config(["$stateProvider",function(a){a.state("login",{url:"/login",templateUrl:"/static/modules/login/login.html",controllerAs:"login",controller:"LoginCntrl",resolve:{vendorClients:"vendorClients",access:["Access",function(a){return a.isAnonymous()}]}})}]).controller("LoginCntrl",["$state","AuthService","$localStorage","vendorClients",a])}(),function(){"use strice";var a=function(a,b){return{login:function(c){return a.post(b.v1baseUrl+"auth/login/",c)}}};angular.module("login").factory("AuthService",["$http","constants",a])}(),function(){"use strict";var a=function(a,b,c,d,e){
// Redirect to admin or vendor page accorfing to the credentials.
e.$hasRole(d.userRole.ADMIN)?(this.admin=!0,a.go("home.opsorder")):e.$hasRole(d.userRole.VENDOR)&&(this.vendor=!0,a.go("home.order"));
// Controller logic for common items between vendor and admin.
var f=this;this.store_name=e.store_name;var g=c.confirm().parent(angular.element(document.querySelector("#body"))).clickOutsideToClose(!1).title("Are you sure you want to Sign Out?").textContent("After this you will be redirected to login page.").ariaLabel("Sign Out").targetEvent().ok("Sign Out!").cancel("Not Now").openFrom("#logout-button").closeTo("#logout-button");this.toggleSideNav=function(){b("left").toggle()},this.logout=function(){e.$clearUserRole(),e.$refresh().then(function(b){a.go("login")})},this.showLogoutDialog=function(){c.show(g).then(function(){f.logout()})}};angular.module("home",[]).config(["$stateProvider",function(a){a.state("home",{url:"/home",templateUrl:"/static/modules/home/home.html",controllerAs:"home",controller:"homeCntrl",resolve:{vendorClients:"vendorClients",access:["Access",function(a){return a.isAuthenticated()}]}})}]).controller("homeCntrl",["$state","$mdSidenav","$mdDialog","constants","vendorClients",a])}(),function(){"use strict";var a=function(a,b,c){};angular.module("forbidden",[]).config(["$stateProvider",function(a){a.state("forbidden",{url:"/forbidden",templateUrl:"/static/modules/forbidden/forbidden.html",controllerAs:"forbidden",controller:"forbiddenCntrl"})}]).controller("forbiddenCntrl",["$state",a])}(),function(){"use strict";
// Declare all the app level modules which depend on the different filters and services
angular.module("ygVendorApp",["ngMaterial","ngMessages","ui.router","ngStorage","ngResource","base64","login","home","order","forbidden"]).config(["$urlRouterProvider","$locationProvider","$resourceProvider","$mdThemingProvider","roleProvider",function(a,b,c,d,e){
// For any unmatched url, redirect to /home
a.otherwise("/home"),b.html5Mode(!0).hashPrefix("!"),c.defaults.stripTrailingSlashes=!1,e.$get().$setUserRole(),d.theme("purpleTheme").primaryPalette("purple").accentPalette("blue").warnPalette("deep-orange"),d.setDefaultTheme("purpleTheme")}])}(),function(){"use strice";var a={role:"",token:""};angular.module("ygVendorApp").constant("UserData",a)}(),function(){"use strict";var a=[{status:"Intransit",value:"INTRANSIT"},{status:"Queued",value:"QUEUED",selected:!1},{status:"Delivered",value:"DELIVERED",selected:!1},{status:"Order Placed",value:"ORDER_PLACED",selected:!1},{status:"Pickup Attempted",value:"PICKUPATTEMPTED",selected:!1},{status:"Deliver Attempted",value:"DELIVERYATTEMPTED",selected:!1},{status:"Cancelled",value:"CANCELLED",selected:!1},{status:"Rejected",value:"REJECTED",selected:!1}],b=[{value:"00 AM - 06 AM ",time:{start_time:1,end_time:6}},{value:"06 AM - 12 PM",time:{start_time:6,end_time:12}},{value:"12 PM - 06 PM",time:{start_time:12,end_time:18}},{value:"06 PM - 12 AM",time:{start_time:18,end_time:23}}],c={v1baseUrl:"http://yourguy.herokuapp.com/api/v1/",v2baseUrl:"http://yourguy.herokuapp.com/api/v2/",v3baseUrl:"http://yourguy.herokuapp.com/api/v3/",userRole:{ADMIN:"operations",VENDOR:"vendor"},status:a,time:b};angular.module("ygVendorApp").constant("constants",c)}(),function(){"use strict";var a=function(a,b){var c={OK:200,UNAUTHORIZED:401,FORBIDDEN:403,hasRole:function(d){var e=a.defer();return b.then(function(a){a.$hasRole(d)?e.resolve(c.OK):a.$isAnonymous()?e.reject(c.UNAUTHORIZED):e.reject(c.FORBIDDEN)}),e.promise},isAuthenticated:function(){var d=a.defer();return b.then(function(a){a.$isAuthenticated()?d.resolve(c.Ok):d.reject(c.UNAUTHORIZED)}),d.promise},isAnonymous:function(){var d=a.defer();return b.then(function(a){a.$isAnonymous()?d.resolve(c.OK):d.reject(c.FORBIDDEN)}),d.promise}};return c};angular.module("ygVendorApp").factory("Access",["$q","vendorClients",a])}(),function(){"use strict";var a=function(a,b){return{dgListQuery:a(b.v1baseUrl+"deliveryguy/:id",{id:"@id"},{query:{method:"GET",isArray:!0}}),dgPageQuery:a(b.v2baseUrl+"delivery_guy/:id/",{id:"@id"},{query:{method:"GET",isArray:!1}})}};angular.module("ygVendorApp").factory("DeliverGuy",["$resource","constants",a])}(),function(){"use strict";var a=function(a,b){return{getOrders:a(b.v2baseUrl+"order/:id/",{id:"@id"},{query:{method:"GET",isArray:!1}})}};angular.module("ygVendorApp").factory("Order",["$resource","constants",a])}(),function(){"use strict";var a=function(a,b){return a(b.v1baseUrl+"vendor/:id",{id:"@id"},{profile:{method:"GET"},query:{method:"GET",isArray:!1,transformResponse:function(a){var b=angular.fromJson(a);if(angular.isArray(b)){var c={};return c.store_name="Operations",c.vendors=b,c}return b}}})};angular.module("ygVendorApp").factory("Vendor",["$resource","constants",a])}(),function(){"use strict";var a=function(a,b){var c={},d=function(){var e=a.defer();return b.dgListQuery.query(function(a){e.resolve(angular.extend(c,{dgs:a,$refresh:d}))},function(a){e.reject(angular.extend(c,a,{$refresh:d}))}),e.promise};return d()};angular.module("ygVendorApp").factory("DgList",["$q","DeliverGuy",a])}(),function(){"use strict";var a=function(a,b,c){var d={responseError:function(d){var e=a.defer();return(401===d.status||403===d.status)&&(b.$reset(),c.path("/login")),e.reject(d),e.promise}};return d},b=function(a,b,c,d){a.$on("$stateChangeError",function(a,e,f,g,h,i){angular.element(d[0].getElementsByClassName("request-loader")).addClass("request-loader-hidden"),i==b.UNAUTHORIZED?c.go("login"):i==b.FORBIDDEN&&c.go("forbidden")}),a.$on("$stateChangeStart",function(a,b,c,e,f){console.log("start"),angular.element(d[0].getElementsByClassName("request-loader")).removeClass("request-loader-hidden")}),a.$on("$stateChangeSuccess",function(a,b,c,e,f){console.log("end"),angular.element(d[0].getElementsByClassName("request-loader")).addClass("request-loader-hidden")})};angular.module("ygVendorApp").factory("errorHandler",["$q","$localStorage","$location",a]).config(["$httpProvider",function(a){a.interceptors.push("errorHandler")}]).run(["$rootScope","Access","$state","$document",b])}(),function(){"use strict";var a=function(a){var b={request:function(b){return b.headers=b.headers||{},a.token&&(b.headers.Authorization="Token "+a.token),b}};return b};angular.module("ygVendorApp").factory("tokenInjector",["$localStorage",a]).config(["$httpProvider",function(a){a.interceptors.push("tokenInjector")}])}(),function(){"use strice";var a=function(a,b){var c={userrole:"anonymous",authenticated:!1,$resetUserRole:function(){return b.$reset(),userrole="anonymous",authenticated=!1,{userrole:userrole,is_authenticated:authenticated}},$setUserRole:function(){if(b.token){var c=a.decode(b.token).split(":");userrole=c[1],authenticated=!0}else userrole="anonymous",authenticated=!1},$getUserRole:function(){return{userrole:userrole,is_authenticated:authenticated}}};return c};angular.module("ygVendorApp").factory("role",["$base64","$localStorage",a])}(),function(){"use strict";var a=function(a,b,c){var d={},e=function(){var f=a.defer();return c.query(function(a){f.resolve(angular.extend(d,a,{$refresh:e,$updateuserRole:function(){return b.$setUserRole()},$clearUserRole:function(){return b.$resetUserRole()},$hasRole:function(a){return b.$getUserRole().userrole==a},$isAuthenticated:function(){return b.$getUserRole().is_authenticated},$isAnonymous:function(){return!b.$getUserRole().is_authenticated}}))},function(a){f.resolve(angular.extend(d,{$refresh:e,$updateuserRole:function(){return b.$setUserRole()},$clearUserRole:function(){return b.$resetUserRole()},$hasRole:function(a){return $getUserRole().userrole==a},$isAuthenticated:function(){return b.$getUserRole().is_authenticated},$isAnonymous:function(){return!b.$getUserRole().is_authenticated}}))}),f.promise};return e()};angular.module("ygVendorApp").factory("vendorClients",["$q","role","Vendor",a])}(),function(){"use strict";var a=function(a,b,c,d,e,f,g,h,i){/*
			 Variable definations
		*/
var j=this;this.params=c,this.statusArray=void 0===c.dg?[]:c.dg.split(","),this.params.date=new Date(this.params.date),this.vendor_list=d.vendors,/*
			 scope Orders variable assignments are done from this section for the controller
		*/
this.orders=f.data,this.orderFrom=50*(this.params.page-1)+1,this.orderTo=this.orderFrom-1+f.data.length,this.total_pages=f.total_pages,this.total_orders=f.total_orders,this.pending_orders_count=f.pending_orders_count,this.unassigned_orders_count=f.unassigned_orders_count,/*
			@ status_list: scope order status for eg: 'INTRANSIT' ,'DELIVERED' variable assignments.
			@ time_list: scope order time for time filer variable assignments.
		*/
this.status_list=h.status,this.time_list=h.time,/*
			@ All method defination for the controller starts from here on.
		*/
/*
			 @ toggleFilter : main sidenav toggle function, this function toggle the sidebar of the filets of the orders page page.
		*/
this.toggleFilter=function(){b("order-filter").toggle()},/*
			@pagerange: funxtion for total pages generations for pagination
		*/
this.pageRange=function(a){return new Array(a)},/*
			@paginate is a function to paginate to the next and previous page of the order list
			@statusSelection is a fucntion to select or unselect the status data in order filter
		*/
this.paginate={nextpage:function(){j.params.page=j.params.page+1,j.getOrders()},previouspage:function(){j.params.page=j.params.page-1,j.getOrders()}},this.statusSelection={toggle:function(a,b){var c=b.indexOf(a.value);c>-1?b.splice(c,1):b.push(a.value)},exists:function(a,b){return b.indexOf(a.value)>-1}},/*
			@dgSearchTextChange is a function for Delivery guy search for filter. When ever the filtered dg change, 
			this function is called.

			@selectedDgChange is a callback function after delivery guy selection in the filter.
		*/
this.dgSearchTextChange=function(a){var b={search:a};return g.dgPageQuery.query(b).$promise.then(function(a){return a.data})},this.selectedDgChange=function(a){a?j.params.dg=a.phone_number:j.params.dg=void 0,j.getOrders()},/*
			@getOrders rleoads the order controller according too the filter to get the new filtered data.
		*/
this.handleOrdeSelection={selectActive:i.isSelected(),numberOfSelectedOrder:i.slectedItemLength(),update:function(){j.handleOrdeSelection.selectActive=i.isSelected(),j.handleOrdeSelection.numberOfSelectedOrder=i.slectedItemLength()},toggle:function(a){i.toggle(a),j.handleOrdeSelection.update()},exists:function(a){return i.exists(a)},clear:function(){i.clearAll(),j.handleOrdeSelection.update()}},/*
			@getOrders rleoads the order controller according too the filter to get the new filtered data.
		*/
this.getOrders=function(){a.transitionTo(a.current,j.params,{reload:!0,inherit:!1,notify:!0})}},b=function(a){console.log("vendor")};angular.module("order",[]).config(["$stateProvider",function(a){a.state("home.opsorder",{url:"^/all-orders?date&vendor&dg&status&page",templateUrl:"/static/modules/order/opsOrders.html",controllerAs:"opsOrder",controller:"opsOrderCntrl",resolve:{vendorClients:"vendorClients",orderResource:"Order",DeliverGuy:"DeliverGuy",access:["Access","constants",function(a,b){return a.hasRole(b.userRole.ADMIN)}],orders:["Order","$stateParams",function(a,b){return b.date=void 0!==b.date?new Date(b.date).toISOString():(new Date).toISOString(),b.page=isNaN(b.page)?1:parseInt(b.page),a.getOrders.query(b).$promise}]}}).state("home.order",{url:"^/orders",templateUrl:"/static/modules/order/vendorOrders.html",controllerAs:"order",controller:"vendorOrderCntrl",resolve:{vendorClients:"vendorClients",access:["Access","constants",function(a,b){return a.hasRole(b.userRole.VENDOR)}]}})}]).controller("opsOrderCntrl",["$state","$mdSidenav","$stateParams","vendorClients","orderResource","orders","DeliverGuy","constants","orderSelection",a]).controller("vendorOrderCntrl",["$state",b])}(),function(){"use strict";var a=function(){return a};angular.module("order").factory("orderFilter",[a])}(),function(){"use strict";var a=function(){var a={selectedItemArray:[],toggle:function(b){var c=a.selectedItemArray.indexOf(b);c>-1?a.selectedItemArray.splice(c,1):a.selectedItemArray.push(b)},exists:function(b){return a.selectedItemArray.indexOf(b)>-1},addItem:function(b){b.selected=!0,a.selectedItemArray.push(b)},removeItem:function(b){var c=selectedItemArray.indexOf(b);return c>-1?(b.selected=!1,a.selectedItemArray.splice(c,1),!0):!1},isSelected:function(){return a.selectedItemArray.length>0?!0:!1},clearAll:function(){return a.selectedItemArray=[],a.selectedItemArray},slectedItemLength:function(){return a.selectedItemArray.length}};return a};angular.module("order").factory("orderSelection",[a])}();
//# sourceMappingURL=main.min.js.map